#!/bin/bash

##
## Build the system on 3 master nodes, and send the executable to all the other machines listed in ec2 manager.
## Must be invoked after a proper `setup-cluster`!!!
##
## Usage: $ ./gnnman/build-system [Context]
##
## Options:
##      Default: Build the corresponding server on master nodes (0), and send the executable to all other machiens.
##      Context: If given, only build the specified context
##


cd $( dirname $0 )/..

EC2MAN_CMD="python3 -m ec2man"

./run/kill-all.sh

if [[ ! -z $1 ]] && [[ $1 != "graph" ]] && [[ $1 != "weight" ]] && [[ $1 != "cpu" ]] && [[ $1 != "gpu" ]] && [[ $1 != "d" ]]; then
    echo "Context '$1' not recognized."
    echo "Usage: ./gnnman/build-system [[Context|gpu]...]    # Empty means build all."
    exit 1
fi

let BUILD_GRAPH=1
let BUILD_WEIGHT=1
BACKEND_OPT=''
for var in $@; do
    if [[ $var == "gpu" ]] || [[ $var == "cpu" ]]; then
        BACKEND_OPT=$var
    elif [[ $var == "graph" ]]; then
        BUILD_WEIGHT=0
    elif [[ $var == "weight" ]]; then
        BUILD_GRAPH=0
    elif [[ $var == "d" ]]; then
        BACKEND_OPT+=" d"
    fi
done

# For graph servers.
if [ ${BUILD_GRAPH} -eq 1 ]; then
    echo "Processing context 'graph'..."
    ${EC2MAN_CMD} graph 0 ssh -t "source ~/.profile; cd dorylus && ./gnnman/helpers/graphserver.bld ${BACKEND_OPT} && ./gnnman/helpers/send-folder build" | tee ssh_build_output

    ERROR=$( grep 'make: ***' ssh_build_output )
    if [[ ! -z $ERROR ]]; then
        echo $ERROR
        rm ssh_build_output
        exit 13
    fi
    rm ssh_build_output
fi



# For weight servers.
if [ ${BUILD_WEIGHT} -eq 1 ]; then
    echo "Processing context 'weight'..."
    ${EC2MAN_CMD} weight 0 ssh -t "cd dorylus && ./gnnman/helpers/weightserver.bld ${BACKEND_OPT} && ./gnnman/helpers/send-folder build" | tee ssh_build_output

    ERROR=$( grep 'make: ***' ssh_build_output )
    if [[ ! -z $ERROR ]]; then
        echo $ERROR
        rm ssh_build_output
        exit 13
    fi
    rm ssh_build_output
fi